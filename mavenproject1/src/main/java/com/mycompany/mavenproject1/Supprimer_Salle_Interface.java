/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.mavenproject1;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Djeneba
 */
public class Supprimer_Salle_Interface extends javax.swing.JFrame {
    
    Database_cnx cnx = new Database_cnx(); // connexion a la base de donnée

    /**
     * Creates new form Supprimer_Salle_Interface
     */
    public Supprimer_Salle_Interface() {
        initComponents();
         /**requete qui récupère le nom des salles */
        String insertSalle = "select nom_salle FROM salle";
        String insertLocal="select nom_local FROM local";
        
         try {
          // Creation des Statements
             Statement stmt1 = cnx.connection().createStatement();
             Statement stmt2 = cnx.connection().createStatement();
             // L'execution du query et l'insertion des resultat dans ResultSet
          ResultSet rsetSalle = stmt1.executeQuery(insertSalle);
          ResultSet rsetLocal=  stmt2.executeQuery(insertLocal);
          try {
            while(rsetSalle.next())
            {
                // Tant qu'il y a des valeurs on les ajoute dans comboBox
                SalleCombo.addItem(rsetSalle.getString("nom_salle")); 
            } 
            
            while(rsetLocal.next())
            {
                // Tant qu'il y a des valeurs on les ajoute dans comboBox
                LocalCombo.addItem(rsetLocal.getString("nom_local")); 
            }
            
               
           /** on ferme la connexion */ 
            cnx.connection().close();
            }
              catch (SQLException ex) {
            System.out.println("Problème");
            }
              }
         
         
         catch( SQLException err ) {
    System.out.println( err.getMessage( ) );
    }
            
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        SalleCombo = new javax.swing.JComboBox();
        jButtonSupprimer_Salle = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        LocalCombo = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Veuillez sélectionner la salle à supprimer:");

        jLabel2.setText("SUPPRIMER UNE SALLE");

        jButtonSupprimer_Salle.setText("Supprimer");
        jButtonSupprimer_Salle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimer_SalleActionPerformed(evt);
            }
        });

        jLabel3.setText("Veuillez sélectionner le local de la salle: ");

        LocalCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LocalComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(jButtonSupprimer_Salle))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SalleCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LocalCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(50, 79, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(LocalCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(SalleCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addComponent(jButtonSupprimer_Salle)
                .addGap(67, 67, 67))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSupprimer_SalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimer_SalleActionPerformed
        Statement statement = null;
    Statement stmt4 = null;
    Statement stmt5 = null;
        String idsalle;
        String nomSalle;
        String idlocal;
        int idSalle=0;
        int idLocal=0;
        String nomLocal;
        
        
        
        try {
            statement = cnx.connection().createStatement();
            System.out.println("connected");
        } catch (SQLException ex) {
            Logger.getLogger(Supprimer_Salle_Interface.class.getName()).log(Level.SEVERE, null, ex);
             System.out.println("not connected");
        }
        
        
        nomLocal=(String)LocalCombo.getSelectedItem();
        idlocal="SELECT id_local FROM local WHERE nom_local='"+nomLocal+"'";
         nomSalle=(String)SalleCombo.getSelectedItem();
        idsalle="SELECT id_salle FROM salle WHERE nom_salle='"+nomSalle+"'";
        
        
        try {
               stmt4 = cnx.connection().createStatement();
           } catch (SQLException ex) {
               Logger.getLogger(Ajouter_Appareil_Interface.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         try {
               ResultSet Ridlocal = stmt4.executeQuery(idlocal);
               while(Ridlocal.next()){
              System.out.println("test");
               idLocal =  Ridlocal.getInt(1);
              
           }
        
        
        
        try {
               stmt5 = cnx.connection().createStatement();
           } catch (SQLException ex) {
               Logger.getLogger(Ajouter_Appareil_Interface.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try {
               ResultSet Ridsalle = stmt5.executeQuery(idsalle);
               while(Ridsalle.next()){
              System.out.println("test");
               idSalle =  Ridsalle.getInt(1);
              
               }
               }
               
               catch (SQLException ex) {
               Logger.getLogger(Supprimer_Salle_Interface.class.getName()).log(Level.SEVERE, null, ex);
           }
               
             
              // System.out.println(idSalle);
               
             
              // System.out.println(idSalle);
               
             
              // System.out.println(idSalle);
               
             
              // System.out.println(idSalle);
           } catch (SQLException ex) {
               Logger.getLogger(Supprimer_Salle_Interface.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try {
            statement.executeUpdate("DELETE FROM salle WHERE id_salle="+idSalle+" AND id_local="+idLocal+"");
            System.out.println("La salle a été supprimée avec succès");
            JOptionPane.showMessageDialog(null, "La salle a été supprimé avec succès.");
        } catch (SQLException ex) {
            Logger.getLogger(Ajouter_Salle_Interface.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Problem");
        }
        

// TODO add your handling code here:
    }//GEN-LAST:event_jButtonSupprimer_SalleActionPerformed

    private void LocalComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LocalComboActionPerformed
       String ChoixLocal;
        Statement stmt1 = null;
        Statement stmt2 = null;
      //  String[] ListeSalles = new String[3];
      
      
        int idLocalSelectionne=0;
        ChoixLocal =(String) LocalCombo.getSelectedItem();
        String idLocal = "SELECT id_local FROM local WHERE nom_local='"+ChoixLocal+"'";

        try {
            stmt1 = cnx.connection().createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        }
        ResultSet RidLocal = null;
        try {
            RidLocal = stmt1.executeQuery(idLocal);
        } catch (SQLException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            while(RidLocal.next()){
            idLocalSelectionne =  RidLocal.getInt(1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        }
     
        String NomSalle = "SELECT nom_salle FROM salle WHERE id_local='"+idLocalSelectionne+"'";
        // System.out.println(idLocalSelectionne);
        try {
            stmt2 = cnx.connection().createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        }
        ResultSet ListeSalle = null;
        try {
            ListeSalle = stmt2.executeQuery(NomSalle);
        } catch (SQLException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        try {
            SalleCombo.removeAllItems();
            while(ListeSalle.next()){
            SalleCombo.addItem(ListeSalle.getString("nom_salle")); 
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_LocalComboActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Supprimer_Salle_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Supprimer_Salle_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Supprimer_Salle_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Supprimer_Salle_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Supprimer_Salle_Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox LocalCombo;
    private javax.swing.JComboBox SalleCombo;
    private javax.swing.JButton jButtonSupprimer_Salle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
